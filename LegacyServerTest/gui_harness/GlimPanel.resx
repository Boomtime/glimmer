<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cWifi.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAABJ9JREFUaEPt
        mE1oVFcYhhONggkioRgpYusik5kkk8kIIiHE1oB0Y4IELCQ1uupCdJfg0i66cFFdCS4UERe6c6OLqql2
        UaSIPxgQl9JWdGGppRvFWPx53vG7w5k75975SbwZYV54Od895/1+zsm5555JSxNNNNFEEZlMpjWbzW4Y
        HBzMwe3wG6Ps3MDAwAZpTL78yOfzGXiA4s7RzsOX2G9p34kRtjTSyucAzFi4ZEDyLSQ9TvuItlBURKFV
        2fAtz4p1HG6xNEsLtkUbSabhHSX/yFSO6Vwu12bp6weFryDYPlZGK1SyekG7WDtm7BH2Pt6bFVZObSDA
        Vng7KllE0prtuDGzb8OtVlZlMONVOB6F/ytAjfwL/gLPwmPwR6Ns9WlMGp9vHFXLUbbVKivTD2b6Bbwl
        J62A6Nrus7V/whPY42y3zyxMRUiL37h8FSMqn8e+Bb+0MKVAMMzgM0dcFsSeF2gv0H7NmV7f/nSQTqf1
        nn2lmHAhKrdjP8MeNvcPoGMMvpAohvoznob+FVgCKDY8Zbl8NQRUreMFJ2Y0BivN/DeYLTgkAHJmlbNC
        Tap5TBN4HCGQ/Qp7tr+/v6qt0tvbq+2g92gUTmJ/TyvKHtWYNCaPhcWaUQ3QWx/tY01Ae9oneAqHLF4k
        0HZBXQkuwX88ccK2NNLqCtJlYSKBbgg+9cWiXVAB59UR4kO4yWJ4wfgQvAhfw7B/tZSvYsQuFOOboGoK
        +5/XkdbBbH5Vh81wHnu9+ZaBsRSay44+aqWrsp3nyzBlacqAZj3jugQG+ht8FzoKg+xxfby+pXOKzvZC
        ZwhoWhmfQffSCVJ1oVF26Fk31Rk+pt4rN/3taKbQ7NEH17orA4e18JISJUTlWmvpFwcCdTHre7ZCxdUK
        2pCto+132pPwMHZwCslWn8ZKjmzRfXbse9gVX/JY9PX1aWvdD4K7CZxEWjEVtp8/6zpzjQTv3Dr0+9HL
        JxwrbN+veP+JA847FDCGD+BOk9cM+VoMX+yAO0xeO5jANgUJVsRZoTe0P7Hiq01aN/iLrFYsxXTiu7m2
        mbR29PT0tBLkahDQgurD951JSqAJMb6Lcf08/Bn7Dq0oW327WBTvpBnbC8NXmqts48X9E4AVaifQFQWG
        /8HdNlQERXXQfwT+bbo4SiPthzPcAX27oXJId4W43iO9LrASm7mflCVlpUZI9oezauEtEGXLZ8TCFMEV
        vYNcH+3GWwIKmIS68FVbdNjWRW3KwiULisjDen52hqkYeQubHEg661lR11ZxeuHFQrHWX6K351kLmxxI
        OuErCPtfWr2kGU6xtlQqpf8pZeAR+jXmm8CEhU0OvGgrSXxdxTjUPwQ+N0kZNGYa1+c6J91KkyQLu4pf
        UyG0N2k7bUgv+DDPP9CKxR/hfCs66b9Jn3yu6Qi2oeVBd3d3K1tlI1ul8MHRtZsCz2hSIZ6h+IJGPul0
        uujTUKDQg6ys792QfchkjQsK1dUhagJ3Tda4oNAnMRN4YrLGBYXOqdgIzpmscUGRO1lp39VYfXX/dkgU
        FDoNnzsTkD1tw58G+NCt4TsxwtE5wtG6xrqbaKKJJly0tLwHZXVXxgORMTEAAAAASUVORK5CYII=
</value>
  </data>
</root>